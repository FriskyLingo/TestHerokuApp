!!! 5
html
  head
    title= title
    //link(rel='stylesheet', href='/stylesheets/style.css')
    //link(rel='stylesheet', href='/stylesheets/chunkfive-fontface.css')
    link(rel='stylesheet', href='/flot/examples/examples.css') 
    script(src='/flot/jquery.js')
    script(src='/flot/jquery.flot.js')
    script(src='http://127.0.0.1:3001/socket.io/socket.io.js')
    script(type='text/javascript')
        $(function() {
            var crntHumidity = 0;

            //var socket = io.connect('http://localhost');
            var socket = io.connect('http://127.0.0.1:3001');

            //alert(theData);
            //console.log(theData);

            
            socket.on('getSubscription', function (data) {
                console.log('Current Temperature: ' + data.current_temperature);
                //socket.emit('my other event', { my: 'data' });
            });


            // socket.on('getHumidity', function (data) {
            //     console.log(data);
            //     crntHumidity = data;
            //     //socket.emit('my other event', { my: 'data' });
            // });

            //socket.emit('callMethod', {'methodName':'method3'});

            

            //alert('kevin');
         
            // We use an inline data source in the example, usually data would
            // be fetched from a server
            var data = [],
                totalPoints = 300;

                //loginToNest();

            function getRandomData() {
                if (data.length > 0)
                    data = data.slice(1);

                    // socket.on('getHumidity', function (data2) {
                    //     console.log(data2);
                    //     crntHumidity = data2;
                    //     //socket.emit('my other event', { my: 'data' });
                    // });

                // Do a random walk
                while (data.length < totalPoints) {

                    var prev = data.length > 0 ? data[data.length - 1] : 50,
                        y = prev + Math.random() * 10 - 5;

                    //     //alert(socket.emit('callMethod', {'methodName':'method3'}));
                    //     // console.log(
                    //     //     socket.emit('callMethod', {'methodName':'method3'})
                    //     //     );
                    //     //getCurrentHumidity();
                    //     //alert(crntHumidity);
                    //     //alert(y);

                    // if (y < 0) {
                    //     y = 0;
                    // } else if (y > 100) {
                    //     y = 100;
                    // }

                    // y = crntHumidity;
                    y = getCurrentHumidity();

                    data.push(y);
                }

                // Zip the generated y values with the x values
                var res = [];
                for (var i = 0; i < data.length; ++i) {
                    res.push([i, data[i]]);
                }

                return res;
            }


            // Set up the control widget
            var updateInterval = 300;
            $("#updateInterval").val(updateInterval).change(function () {
                var v = $(this).val();
                if (v && !isNaN(+v)) {
                    updateInterval = +v;
                    if (updateInterval < 1) {
                        updateInterval = 1;
                    } else if (updateInterval > 2000) {
                        updateInterval = 2000;
                    }
                    $(this).val("" + updateInterval);
                }
            });


            var plot = $.plot("#placeholder", [ getRandomData() ], {
                series: {
                    shadowSize: 0   // Drawing is faster without shadows
                },
                yaxis: {
                    min: 0,
                    max: 100
                },
                xaxis: {
                    show: false
                }
            });


            function update() {
                plot.setData([getRandomData()]);

                // Since the axes don't change, we don't need to call plot.setupGrid()
                plot.draw();
                setTimeout(update, updateInterval);
            }

            function getCurrentHumidity() {
                socket.on('getHumidity', function (data2) {
                    //console.log(data2);
                    return data2;
                    //crntHumidity = data2;
                    //socket.emit('my other event', { my: 'data' });
                });
            }

            update();


            // Add the Flot version string to the footer
            $("#footer").prepend("Flot " + $.plot.version + " &ndash; ");

            //alert(getCurrentHumidity());
        });
    header
    section#wrapper
      #header
        h2 Real-Time updates
      #content
        #democontainer.demo-container
          #placeholder.demo-placeholder
        p You can update a chart periodically to get a real-time effect by using a timer to insert the new data in the plot and redraw it.
      #footer
        Copyright &copy; 2007 - 2013 IOLA and Ole Laursen
