!!! 5
html
  head
    title= title
    //link(rel='stylesheet', href='/stylesheets/style.css')
    //link(rel='stylesheet', href='/stylesheets/chunkfive-fontface.css')
    link(rel='stylesheet', href='/flot/examples/examples.css') 
    script(src='/flot/jquery.js')
    script(src='/flot/jquery.flot.js')
    script(src='/flot/jquery.flot.time.js')
    //Uncomment to debug
    //script(src='http://127.0.0.1:3001/socket.io/socket.io.js')
    script(src='http://nameless-ridge-9506.herokuapp.com:3001/socket.io/socket.io.js')
    script(type='text/javascript')
        $(function() {
            //Set the address that the socket connection is setup on (look in app.js)
            //var socket = io.connect('http://127.0.0.1:3001'); //<---Uncomment to debug
            var socket = io.connect('http://nameless-ridge-9506.herokuapp.com:3001');

            //Create a variable for holding the Nest data object
            var nestDataObject = {};
            //Create an array for holding the individual plot points inside the Nest data object
            var nestDataArray = [];

            //Set the options for the Flot chart
            var flotChartOptions = {
                lines: {
                    show: true
                },
                points: {
                    show: false
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    timezone: "browser"
                },
                yaxis: {
                    tickSize: 1,
                    tickDecimals: 0
                }
            };

            //When socket.emit is called...
            socket.on('message', function (data) {
                if(data.message) {
                    //Add the returned data to the array
                    nestDataArray.push(data.message);

                    //Add the array to the data object
                    nestDataObject = [ {'data': nestDataArray} ];

                    //Get the current number of items in the array
                    var nestDataLength = nestDataObject[0].data.length;

                    //Limit the number of displayed columns to 10
                    if (nestDataLength > 10) {
                        //Remove the oldest item from the array
                        nestDataObject[0].data.splice(0,1);
                    }

                    //Plot the data on the chart
                    $.plot("#placeholder", nestDataObject, flotChartOptions);
                } else {
                    //There's a problem
                    console.log("There is a problem:", data);
                }
            });


            ////Uncomment for testing if you don't want to loop forever
            //theNestData = [];
            //alreadyFetched = {};
            //var iteration = 0;

            //Function used to get the data from the node.js server
            function fetchData() {
                ////Uncomment for testing if you don't want to loop forever
                //++iteration;

                socket.emit('send', { message: 'text' });

                //Run this function every 1000 milliseconds to get recent data
                setTimeout(fetchData, 1000);

                ////Uncomment for testing if you don't want to loop forever
                //if (iteration < 20) {
                    //setTimeout(fetchData, 1000);
                //} else {
                    //theNestData = [];
                    //alreadyFetched = {};
                //}
            }

            //Initial execution
            setTimeout(fetchData, 1000);
        });
    header
    section#wrapper
      #header
        h2 Your Nest Data: IN REAL TIME!
      #content
        #democontainer.demo-container
          #placeholder.demo-placeholder
        p This chart displays the temperature in your house for the most recent 10 seconds, updating every second.
